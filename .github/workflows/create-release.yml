name: Create Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

# Prevents multiple workflow runs from executing simultaneously
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  create-release:
    if: >
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.title, 'chore: release') &&
      startsWith(github.event.pull_request.head.ref, 'release/')

    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version from package.json
        id: package-version
        uses: actions/github-script@v7
        with:
          script: |
            const pkg = require('./package.json')
            core.setOutput('version', pkg.version)

      - name: Create Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.BOT_PAT }}
          script: |
            const version = '${{ steps.package-version.outputs.version }}'
            const tagName = `v${version}`

            try {
              await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: tagName,
                name: tagName,
                generate_release_notes: true
              })
              
              core.info(`Created release: ${tagName}`)
            } catch (error) {
              core.setFailed(error.message)
            }
